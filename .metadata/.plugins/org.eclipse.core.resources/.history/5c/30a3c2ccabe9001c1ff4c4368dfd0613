package LUH_201945022.frame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.*;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JPanel;

import GYH_202145024.SnackMenu;
import KYH_201945023.*;
import inquiry.Inquiry;
import LUH_201945022.set.*;
import LUH_201945022.movie.*;

public class MainPanel extends PanelSet implements MouseListener, MouseMotionListener {

///////////////////////////////////////////////////////////////
// 변수 선언
	private FrameSet fs;

	public FirstFrame_left fl;
	public FirstFrame_right fr;
	public SelectMovie sm;
	public PosterLabel pl;
	public SelectTime st;
	public SelectSeat ss;
	public Inquiry iq;
	public SelectPay sp;
	public SnackMenu s;
	public Dimension topsize = new Dimension(screenWidth * 19 / 20, screenHeight * 1 / 20);
	
///////////////////////////////////////////////////////////////
// 생성자
	public MainPanel(FrameSet fs) {
		this.fs = fs;
		setBackground(purpledark);
		setBorder(wl);
		setGbc();
		setLayout(gbl);

		Database.init();
		ResultSet rs = null;
		try {
			rs = Database.getResultSet("select count(*) from movieinfo");
			if (rs.next())
				movCnt = rs.getInt(1);
			movList = new Movie[movCnt];
			
			rs = Database.getResultSet("select * from movieinfo");
			for (int i = 0; rs.next(); i++)
				movList[i] = new Movie(rs.getString(1), rs.getString(2));
			setPath();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				rs.close();
				Database.conn.close();
				Database.stmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			System.out.println("DB 연결 종료");
		}
		
		gbc.weightx = 1;
		JPanel top = new JPanel();
		top.setPreferredSize(topsize);
		top.setBackground(Color.BLACK);
		gbl.setConstraints(top, gbc);
		
		fl = new FirstFrame_left(this);
		fl.setPreferredSize(size7);
		gbc.weightx = 0;
		gbc.gridwidth = 1;
		gbc.gridy = 1;
		gbc.gridx = 0;
		gbl.setConstraints(fl, gbc);

		fr = new FirstFrame_right(this);
		fr.setPreferredSize(size11);
		gbc.gridx = 1;
		gbl.setConstraints(fr, gbc);

		add(top);
		add(fr);
		add(fl);

		addMouseListener(this);
	}

///////////////////////////////////////////////////////////////
// 메서드
	public void setPath() {
		movPath = new String[movCnt];
		for(int i = 0; i < movCnt; i++) {
			movPath[i] = path + "/" + movList[i].getName() + ".jpg";
		}
	}

	public String[] getMovPath() {
		return movPath;
	}

	public Movie[] getMovList() {
		return this.movList;
	}

	public FrameSet getFrameSet() {
		return this.fs;
	}

///////////////////////////////////////////////////////////////
// 리스너
	@Override
	public void mouseClicked(MouseEvent e) {
		Object obj = e.getSource();
		if (obj == this) {
			if (e.getClickCount() == 2) {
				fs.getContentPane().removeAll();

				MainPanel a = new MainPanel(fs);
				fs.mainPanel = a;
				fs.getContentPane().add(fs.mainPanel);

				fs.setVisible(true);

				revalidate();
			} else if(e.getClickCount() == 15) {
				Main admin = new Main();
			}
		}
	}

	@Override
	public void mousePressed(MouseEvent e) {
	}

	@Override
	public void mouseReleased(MouseEvent e) {
	}

	@Override
	public void mouseEntered(MouseEvent e) {
	}

	@Override
	public void mouseExited(MouseEvent e) {
	}

	@Override
	public void mouseDragged(MouseEvent e) {
	}

	@Override
	public void mouseMoved(MouseEvent e) {
	}

///////////////////////////////////////////////////////////////
}
